@mixin grid($columns: 4, $columnsTablet: 0, $columnsDesktop: 0) {
  @extend %container;

  display: grid;
  grid-column-gap: 16px;
  grid-template-columns: repeat($columns, minmax(0, 1fr));

  @include from(tablet) {
    @if $columnsTablet > 0 {
      grid-template-columns: repeat($columnsTablet, minmax(0, 1fr));
    }
  }

  @include from(desktop) {
    @if $columnsDesktop > 0 {
      grid-template-columns: repeat($columnsDesktop, minmax(0, 1fr));
    }
  }
}

/*
  Sets a grid structure in child elements that are inside a parent with .grid classname.
  Matches child's column structure with parent's column structure without breaking the container.
*/
@mixin subgrid($columns: 4, $columnsTablet: 0, $columnsDesktop: 0) {
  display: grid;
  grid-column-gap: 16px;
  grid-template-columns: repeat($columns, minmax(0, 1fr));

  @include from(tablet) {
    @if $columnsTablet > 0 {
      grid-template-columns: repeat($columnsTablet, minmax(0, 1fr));
    }
  }

  @include from(desktop) {
    @if $columnsDesktop > 0 {
      grid-template-columns: repeat($columnsDesktop, minmax(0, 1fr));
    }
  }
}
